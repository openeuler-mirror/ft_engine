# Copyright (c) 2023 Huawei Technologies Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/gn/fangtian.gni")
import("//config.gni")

config("libdms_private_config") {
  cflags = [ "-Wno-c++11-narrowing" ]

  include_dirs = [
    "$window_manager_path/dm/include",
    "$window_manager_path/interfaces/innerkits/dm",
    "$window_manager_path/ft_adapter",
    "$display_server_root/utils/buffer_handle/export",
    "$display_server_root/rosen/modules/composer/vsync/include",
    "/usr/include/libxml2",
  ]
}

config("libdms_public_config") {
  include_dirs = [ "$window_manager_path/dmserver/include" ]
}

ft_shared_library("libdms") {
  defines = ft_defines

  sources = [
    "$window_manager_path/dm/src/zidl/display_manager_agent_proxy.cpp",
    "$window_manager_path/dmserver/src/abstract_display.cpp",
    "$window_manager_path/dmserver/src/abstract_display_controller.cpp",
    "$window_manager_path/dmserver/src/abstract_screen.cpp",
    "$window_manager_path/dmserver/src/abstract_screen_controller.cpp",
    "$window_manager_path/dmserver/src/display_cutout_controller.cpp",
    "$window_manager_path/dmserver/src/display_dumper.cpp",
    "$window_manager_path/dmserver/src/display_manager_agent_controller.cpp",
    "$window_manager_path/dmserver/src/display_manager_config.cpp",
    "$window_manager_path/dmserver/src/display_manager_service.cpp",
    "$window_manager_path/dmserver/src/display_manager_service_inner.cpp",
    "$window_manager_path/dmserver/src/display_manager_stub.cpp",
    "$window_manager_path/dmserver/src/display_power_controller.cpp",
    "$window_manager_path/dmserver/src/screen_rotation_controller.cpp",
    "$window_manager_path/dmserver/src/sensor_connector.cpp",
  ]

  configs = [
    ":libdms_private_config",
    "$window_manager_path/resources/config/build:coverage_flags",
  ]

  public_configs = [ ":libdms_public_config" ]

  libs = [ "xml2" ]

  deps = [
    "$display_server_root/frameworks/surface/ft_build:surface",
    "$display_server_root/rosen/modules/render_service_base/ft_build:librender_service_base",
    "$display_server_root/rosen/modules/render_service_client/ft_build:librender_service_client",
    "$window_manager_path/utils/ft_build:libwmutil",

    "//build/gn/configs/system_libs:hitrace_meter",
    "//build/gn/configs/system_libs:safwk",
    "//build/gn/configs/system_libs:eventhandler",
    "//build/gn/configs/system_libs:skia",
    "//build/gn/configs/system_libs:syspara",
  ]
}
